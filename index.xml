<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Uyen Hoang</title>
    <link>http://uhoang.github.io/</link>
    <description>Recent content in Home on Uyen Hoang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Feb 2018 13:51:06 -0500</lastBuildDate>
    
	<atom:link href="http://uhoang.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://uhoang.github.io/about/</link>
      <pubDate>Mon, 05 Feb 2018 13:51:06 -0500</pubDate>
      
      <guid>http://uhoang.github.io/about/</guid>
      <description>I am a Data Scientist located in Toronto, Canada. My recent work focuses on the development of hybrid design-and-model based methods for the following applications:
 To balance large-scaled non-probability samples To build segmentation tools for social and political ideologies To predict socio-demographics for online advertising  I have over 4 years of work experience in the data science field. My recent experience includes the following companies:
 Mountain Equipment Co-op, Toronto, Canada Vox Pop Labs Inc.</description>
    </item>
    
    <item>
      <title>Consumer Lifestyle Clustering</title>
      <link>http://uhoang.github.io/project/consumer-lifestyle-clustering/</link>
      <pubDate>Tue, 10 Oct 2017 16:07:03 -0500</pubDate>
      
      <guid>http://uhoang.github.io/project/consumer-lifestyle-clustering/</guid>
      <description>Recently, I have built a consumer lifestyle segmentation tool for the analytics and insight team at Mountain Equipment Co-op. The main purpose of this project is to replicate a typing tool, that has previously been developed for US consumers by a established consulting firm. This tool is leveraged to design a scalable, customer-centric marketing solution. The analysis for this tool is written in R. For further details, you can visit my Github repository.</description>
    </item>
    
    <item>
      <title>Ensemble methods</title>
      <link>http://uhoang.github.io/blog/ensemble/</link>
      <pubDate>Sat, 25 Feb 2017 15:16:17 -0500</pubDate>
      
      <guid>http://uhoang.github.io/blog/ensemble/</guid>
      <description>Bagging &amp;amp; Boosting Bagging and boosting are two ensenble methods that a set of weak learner are combined to create a strong learner, which has a better performance than a single learner.
In learning, the main cause of error are due to noise, bias and variance. The goal of these ensemble methods is to reduce the error from bias and variance. Thus, it produces a more reliable classifier / regressor.</description>
    </item>
    
    <item>
      <title>Decision trees</title>
      <link>http://uhoang.github.io/blog/decision-tree/</link>
      <pubDate>Fri, 17 Feb 2017 14:53:17 -0500</pubDate>
      
      <guid>http://uhoang.github.io/blog/decision-tree/</guid>
      <description>Decision trees The main idea of decision trees is to learn a set of rules that help to classify/predict a new example given a training dataset. In this process, we split the data according to one of the features, so that we end up with the purest possible distribution of the labels
How are these rules learnt? Explaining decision trees: We start at the root node, which takes an input as an entire training dataset.</description>
    </item>
    
    <item>
      <title>Modules in Python</title>
      <link>http://uhoang.github.io/blog/py_module/</link>
      <pubDate>Thu, 09 Feb 2017 15:06:09 -0500</pubDate>
      
      <guid>http://uhoang.github.io/blog/py_module/</guid>
      <description>I recently started reading, A byte of python, and found it a very helpful guide to the language for a beginner. The book was well-written, and explained most of important concepts in simple terms with self evident examples to follow. Thus, it made learning Python simple and interesting.
As a R programmer, I found that those sections such as modules, data structures and OOP are important to understand the basic building blocks of Python and how to make connection with the language that Iâ€™m more familiar with.</description>
    </item>
    
    <item>
      <title>Note on Factorization machines</title>
      <link>http://uhoang.github.io/blog/fm/</link>
      <pubDate>Tue, 24 Jan 2017 15:28:54 -0500</pubDate>
      
      <guid>http://uhoang.github.io/blog/fm/</guid>
      <description>Factorization machines (FM) are a generic model class that can mimic most factorization models just by feature engineering.
FMs combine feature engineering with factorization models(matrix factorization or tensor factorization) in estimating interactions between categorical variables.
Factorization Machines Math $$ \hat y := w_0 + \sum_{i= 1}^n w_i x_i + \sum_{i = 1}^n \sum_{j = i+1}^n \hat w_{i,j} x_i x_j $$
where $\hat w_{i,j}$ are the factorized interaction parameters between pairs</description>
    </item>
    
    <item>
      <title>Create a Hugo site with Github</title>
      <link>http://uhoang.github.io/blog/create-a-hugo-site-with-github/</link>
      <pubDate>Sun, 15 Jan 2017 23:28:25 -0500</pubDate>
      
      <guid>http://uhoang.github.io/blog/create-a-hugo-site-with-github/</guid>
      <description>Step 1: Install Hugo For Linux users, you can install hugo through snap or apt-get command in the terminal. See install for further details or if you are running other OS.
snap install hugo or
sudo apt-get install hugo Step 2: Create a new site In your terminal, run the following command, where site_name will be your site directory. This means that all the markdown and templates and configuration will be store in that directory.</description>
    </item>
    
  </channel>
</rss>